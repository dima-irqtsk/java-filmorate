DROP TABLE IF EXISTS mpa CASCADE;
CREATE TABLE IF NOT EXISTS mpa (
    mpa_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(10) NOT NULL UNIQUE,
    description varchar(200) NOT NULL
);

DROP TABLE IF EXISTS films CASCADE;
CREATE TABLE IF NOT EXISTS films (
    film_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(90) NOT NULL,
    description varchar(255) NOT NULL,
    release_date date NOT NULL,
    duration int NOT NULL,
    mpa_id int REFERENCES mpa (mpa_id) ON DELETE CASCADE,
    CONSTRAINT correct_release_date CHECK (release_date > '1895-12-28'),
    CONSTRAINT films_not_empty_fields CHECK (name <> ''AND description <> '' AND duration > 0)
);

DROP TABLE IF EXISTS genre CASCADE;
CREATE TABLE IF NOT EXISTS genre (
    genre_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(60) NOT NULL UNIQUE
);

DROP TABLE IF EXISTS film_genre CASCADE;
CREATE TABLE IF NOT EXISTS film_genre (
    film_id int REFERENCES films (film_id) ON DELETE CASCADE,
    genre_id int REFERENCES genre (genre_id) ON DELETE CASCADE,
    CONSTRAINT pk_fields_film_genre PRIMARY KEY (film_id, genre_id)
);

DROP TABLE IF EXISTS users CASCADE;
CREATE TABLE IF NOT EXISTS users (
    user_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email varchar(50) NOT NULL UNIQUE,
    login varchar(50) NOT NULL UNIQUE,
    name varchar(50),
    birthday date NOT NULL,
    CONSTRAINT users_not_empty_fields CHECK (login <> '' AND email <> ''),
    CONSTRAINT birthday_in_the_past CHECK (birthday < NOW())
);

DROP TABLE IF EXISTS friendship CASCADE;
CREATE TABLE IF NOT EXISTS friendship (
    user_id int NOT NULL REFERENCES users (user_id) ON DELETE CASCADE,
    friend_id int NOT NULL REFERENCES users (user_id) ON DELETE CASCADE,
    confirmed boolean DEFAULT false,
    CONSTRAINT pk_fields_friendship PRIMARY KEY (user_id, friend_id)
);

DROP TABLE IF EXISTS likes CASCADE;
CREATE TABLE IF NOT EXISTS likes (
    film_id int REFERENCES films (film_id) ON DELETE CASCADE,
    user_id int REFERENCES users (user_id) ON DELETE CASCADE,
    CONSTRAINT pk_fields_likes PRIMARY KEY (film_id, user_id)
);

CREATE INDEX IF NOT EXISTS film_name_index ON films (name);

CREATE INDEX IF NOT EXISTS users_email_index ON users (email);

CREATE INDEX IF NOT EXISTS users_login_index ON users (login);

CREATE INDEX IF NOT EXISTS users_name_index ON users (name);